#!/bin/sh

set -e

: ${GIT_DIR:=.git}
: ${HG_DIR:=${GIT_DIR}/hg}
: ${HG_GIT_DIR:=${HG_DIR}/.hg/git}
: ${HG_REMOTE:=hg}

check_hg() {
    which hg >/dev/null 2>&1 || {
        echo "error: hg not found" >&2
        exit 1
    }
}

hg_() {
    hg -R "$HG_DIR" "$@"
}

# Map default in Hg to master in Git
map_branch() {
    [ "$1" = "default" ] && echo "master" || echo "$1"
}

# Create Hg bookmarks for Hg branches
update_bookmarks() {
    hg_ branches | while read branch rev rest; do
        target=$(map_branch $branch)
        rev=$(echo $rev | sed -r "s/([0-9]+):.*/\\1/")
        hg_ bookmark -f -r $rev $target
    done
}

# Delete all Hg bookmarks
delete_bookmarks() {
    hg_ bookmarks \
        | sed -r 's/[[:space:]]+(.+?)[[:space:]]+.*/\\1/' \
        | while read bookmark; do hg_ bookmark -d $bookmark; done
}

# Convert Hg changesets to Git commits
hg2git() {
    update_bookmarks
    hg_ gexport
}

# Convert Git commits to Hg changesets
git2hg() {
    delete_bookmarks
    hg_ gimport
}

### COMMANDS ###

hg_clone() {
    check_hg
    :
}

# Fetch changes from remote hg repository
hg_fetch() {
    check_hg
    hg_ pull && hg2git && git fetch $HG_REMOTE
}

# Export git changes and show outgoing changes
hg_outgoing() {
    check_hg
    git2hg
    hg_ outgoing
}

# Export git changes and push to remote hg repository
hg_push() {
    check_hg
    git2hg
    hg_ push
}

usage() {
    echo "Usage: hg git COMMAND [ARGS...]" >&2
    echo "" >&2
    echo "Use \"hg git help\" to get more help" >&2
    echo "" >&2
    exit 2
}

help() {
    echo "Usage: hg git COMMAND [ARGS...]"
    echo ""
    echo "(TODO)"
    exit
}

cmd=$1
[ -z "$cmd" ] && usage
shift

case "$cmd" in
    help|-h|--help)  help "$@" ;;
    clone)           hg_clone "$@" ;;
    fetch)           hg_fetch "$@" ;;
    outgoing)        hg_outgoing "$@" ;;
    push)            hg_push "$@" ;;
    *)               usage ;;
esac
